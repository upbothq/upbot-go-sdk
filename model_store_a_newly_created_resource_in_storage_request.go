/*
upbot API Documentation

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package upbot

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StoreANewlyCreatedResourceInStorageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoreANewlyCreatedResourceInStorageRequest{}

// StoreANewlyCreatedResourceInStorageRequest struct for StoreANewlyCreatedResourceInStorageRequest
type StoreANewlyCreatedResourceInStorageRequest struct {
	// This field is required unless <code>type</code> is in <code>discord_bot</code>. Must not be greater than 255 characters.
	Name *string `json:"name,omitempty"`
	// 
	Type string `json:"type"`
	// This field is required unless <code>type</code> is in <code>discord_bot</code>. Must not be greater than 255 characters.
	Target *string `json:"target,omitempty"`
	// This field is required unless <code>type</code> is in <code>discord_bot</code>. Must be at least 0. Must not be greater than 10.
	RetryCount NullableInt32 `json:"retry_count,omitempty"`
	// This field is required unless <code>type</code> is in <code>discord_bot</code>.
	Interval *string `json:"interval,omitempty"`
	Bot *StoreANewlyCreatedResourceInStorageRequestBot `json:"bot,omitempty"`
}

type _StoreANewlyCreatedResourceInStorageRequest StoreANewlyCreatedResourceInStorageRequest

// NewStoreANewlyCreatedResourceInStorageRequest instantiates a new StoreANewlyCreatedResourceInStorageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoreANewlyCreatedResourceInStorageRequest(type_ string) *StoreANewlyCreatedResourceInStorageRequest {
	this := StoreANewlyCreatedResourceInStorageRequest{}
	this.Type = type_
	return &this
}

// NewStoreANewlyCreatedResourceInStorageRequestWithDefaults instantiates a new StoreANewlyCreatedResourceInStorageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoreANewlyCreatedResourceInStorageRequestWithDefaults() *StoreANewlyCreatedResourceInStorageRequest {
	this := StoreANewlyCreatedResourceInStorageRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StoreANewlyCreatedResourceInStorageRequest) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value
func (o *StoreANewlyCreatedResourceInStorageRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *StoreANewlyCreatedResourceInStorageRequest) SetType(v string) {
	o.Type = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *StoreANewlyCreatedResourceInStorageRequest) SetTarget(v string) {
	o.Target = &v
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StoreANewlyCreatedResourceInStorageRequest) GetRetryCount() int32 {
	if o == nil || IsNil(o.RetryCount.Get()) {
		var ret int32
		return ret
	}
	return *o.RetryCount.Get()
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StoreANewlyCreatedResourceInStorageRequest) GetRetryCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RetryCount.Get(), o.RetryCount.IsSet()
}

// HasRetryCount returns a boolean if a field has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) HasRetryCount() bool {
	if o != nil && o.RetryCount.IsSet() {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given NullableInt32 and assigns it to the RetryCount field.
func (o *StoreANewlyCreatedResourceInStorageRequest) SetRetryCount(v int32) {
	o.RetryCount.Set(&v)
}
// SetRetryCountNil sets the value for RetryCount to be an explicit nil
func (o *StoreANewlyCreatedResourceInStorageRequest) SetRetryCountNil() {
	o.RetryCount.Set(nil)
}

// UnsetRetryCount ensures that no value is present for RetryCount, not even an explicit nil
func (o *StoreANewlyCreatedResourceInStorageRequest) UnsetRetryCount() {
	o.RetryCount.Unset()
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetInterval() string {
	if o == nil || IsNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *StoreANewlyCreatedResourceInStorageRequest) SetInterval(v string) {
	o.Interval = &v
}

// GetBot returns the Bot field value if set, zero value otherwise.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetBot() StoreANewlyCreatedResourceInStorageRequestBot {
	if o == nil || IsNil(o.Bot) {
		var ret StoreANewlyCreatedResourceInStorageRequestBot
		return ret
	}
	return *o.Bot
}

// GetBotOk returns a tuple with the Bot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) GetBotOk() (*StoreANewlyCreatedResourceInStorageRequestBot, bool) {
	if o == nil || IsNil(o.Bot) {
		return nil, false
	}
	return o.Bot, true
}

// HasBot returns a boolean if a field has been set.
func (o *StoreANewlyCreatedResourceInStorageRequest) HasBot() bool {
	if o != nil && !IsNil(o.Bot) {
		return true
	}

	return false
}

// SetBot gets a reference to the given StoreANewlyCreatedResourceInStorageRequestBot and assigns it to the Bot field.
func (o *StoreANewlyCreatedResourceInStorageRequest) SetBot(v StoreANewlyCreatedResourceInStorageRequestBot) {
	o.Bot = &v
}

func (o StoreANewlyCreatedResourceInStorageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoreANewlyCreatedResourceInStorageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if o.RetryCount.IsSet() {
		toSerialize["retry_count"] = o.RetryCount.Get()
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Bot) {
		toSerialize["bot"] = o.Bot
	}
	return toSerialize, nil
}

func (o *StoreANewlyCreatedResourceInStorageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStoreANewlyCreatedResourceInStorageRequest := _StoreANewlyCreatedResourceInStorageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStoreANewlyCreatedResourceInStorageRequest)

	if err != nil {
		return err
	}

	*o = StoreANewlyCreatedResourceInStorageRequest(varStoreANewlyCreatedResourceInStorageRequest)

	return err
}

type NullableStoreANewlyCreatedResourceInStorageRequest struct {
	value *StoreANewlyCreatedResourceInStorageRequest
	isSet bool
}

func (v NullableStoreANewlyCreatedResourceInStorageRequest) Get() *StoreANewlyCreatedResourceInStorageRequest {
	return v.value
}

func (v *NullableStoreANewlyCreatedResourceInStorageRequest) Set(val *StoreANewlyCreatedResourceInStorageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStoreANewlyCreatedResourceInStorageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStoreANewlyCreatedResourceInStorageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoreANewlyCreatedResourceInStorageRequest(val *StoreANewlyCreatedResourceInStorageRequest) *NullableStoreANewlyCreatedResourceInStorageRequest {
	return &NullableStoreANewlyCreatedResourceInStorageRequest{value: val, isSet: true}
}

func (v NullableStoreANewlyCreatedResourceInStorageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoreANewlyCreatedResourceInStorageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


